#!/bin/sh
#
# pkg-wrapper
#
# Copyright (c) 2018 Lukas Kropatschek
# Copyright (c) 2018 Konrad Lother
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
set -e

# Do not change the lines below, unless you know what you do

VERSION="0.1"
ACTION=""

# Check if package manager is known
if [ -z ${PKG_PACKAGE_MANAGER} ]; then
    # debian based
    if [ -x "/usr/bin/apt" ]; then
        PKG_PACKAGE_MANAGER="apt"

    # arch based
    elif [ -x "/usr/bin/yay" ]; then
        PKG_PACKAGE_MANAGER="yay"
    elif [ -x "/usr/bin/yaourt" ]; then
        PKG_PACKAGE_MANAGER="yaourt"
    elif [ -x "/usr/bin/pacman" ]; then
        PKG_PACKAGE_MANAGER="pacman"

    # could not auto-guess
    else
        echo "PKG_PACKAGE_MANAGER is not set and could not be guessed. Please set it accordingly!"
        echo ""
        echo "Supported package managers:"
        echo "      apt, pacman/yaourt, xbps"
        exit 1
    fi
fi

if [ "${PKG_USE_SUDO}" = "1" ]; then
   prefix_cmd="sudo"
fi

action_not_supported() {
    echo "action ${ACTION} not supported for ${PKG_PACKAGE_MANAGER}"
    exit 1
}

print_help() {
    echo "pkg-wrapper ${VERSION} Copyright 2018 (C) Lukas Kropatschek, Konrad Lother"
    echo ""
    echo "Usage: pkg ACTION [PKGNAME|FILE]"
    echo ""
    echo "ACTIONS:"
    echo " help           print this help message."
    echo " install        install package with PKGNAME."
    echo " remove         remove package with PKGNAME."
    echo " search         search for PKGNAME in name/description."
    echo " upgrade        upgrade PKGNAME or all packages."
    echo " list           list all installed packages."
    echo " info           show information for package PKGNAME."
    echo " which          check to which package FILE belongs."
    echo " files          list files contained in package PKGNAME."
    echo " clean          remove obsolete packages from package cache."
    echo " hold           hold package with PKGNAME."
    echo " unhold         unhold package with PKGNAME."
    echo " deps           list dependencies for package PKGNAME"
    echo " revdeps        list packages which need package PKGNAME."
    echo " orphans        list orphaned packages."
}

if [ $# -lt 1 ]; then
    print_help
    exit 0
fi

ACTION=$1
shift

case "$PKG_PACKAGE_MANAGER" in
    apt)
        install_cmd="apt install"
        remove_cmd="apt remove"
        search_cmd="apt-cache search"
        upgrade_cmd="apt upgrade"
        update_cmd="apt update"
        list_cmd="dpkg -l"
        info_cmd="dpkg -s"
        which_cmd="apt-file search"
        files_cmd="dpkg-query -L"
        clean_cmd="apt clean"
        hold_cmd="apt hold"
        hold_cmd="apt unhold"
        deps_cmd="apt-cache depends"
        revdeps_cmd="apt-cache rdepends"
        orphans_cmd="deborphan"
        ;;
    yay)
        install_cmd="yay -S"
        remove_cmd="pacman -R"
        search_cmd="yay -Ss"
        upgrade_cmd="yay -Syu"
        update_cmd="pacman -Syy"
        list_cmd="pacman -Qqe"
        info_cmd="pacman -Qi"
        which_cmd="pacman -Qo"
        files_cmd="pacman -Ql"
        clean_cmd="pacman -Scc"
        hold_cmd="action_not_supported"
        unhold_cmd="action_not_supported "
        deps_cmd="pacman -Sq --depends"
        revdeps_cmd="pacman -Qi"
        orphans_cmd="pacman -Qtd"
	;;
    yaourt)
        install_cmd="yaourt -S"
        remove_cmd="yaourt -R"
        search_cmd="yaourt -Ss"
        upgrade_cmd="yaourt -Syu"
        update_cmd="yaourt -Syy"
        list_cmd="yaourt -Qqe"
        info_cmd="yaourt -Qi"
        which_cmd="yaourt -Qo"
        files_cmd="yaourt -Ql"
        clean_cmd="yaourt -Scc"
        hold_cmd="action_not_supported"
        unhold_cmd="action_not_supported "
        deps_cmd="yaourt -Sq --depends"
        revdeps_cmd="yaourt -Qi"
        orphans_cmd="yaourt -Qtd"
        ;;
    pacman)
        install_cmd="pacman -S"
        remove_cmd="pacman -R"
        search_cmd="pacman -Ss"
        upgrade_cmd="pacman -Syu"
        update_cmd="pacman -Syy"
        list_cmd="pacman -Qqe"
        info_cmd="pacman -Qi"
        which_cmd="pacman -Qo"
        files_cmd="pacman -Ql"
        clean_cmd="pacman -Scc"
        hold_cmd="action_not_supported"
        unhold_cmd="action_not_supported "
        deps_cmd="pacman -Sq --depends"
        revdeps_cmd="pacman -Qi"
        orphans_cmd="pacman -Qtd"
        ;;
    xbps)
        install_cmd="xbps-install -S"
        remove_cmd="xbps-remove"
        search_cmd="xbps-query -Rs"
        upgrade_cmd="xbps-install -Su"
        update_cmd="xbps-install -S"
        list_cmd="xbps-query -l"
        info_cmd="xbps-query"
        which_cmd="xbps-query -o"
        files_cmd="xbps-query -f"
        clean_cmd="xbps-remove -O"
        hold_cmd="xbps-pkgdb -m hold"
        unhold_cmd="xbps-pkgdb -m unhold"
        deps_cmd="xbps-query -Rx"
        revdeps_cmd="xbps-query -RX"
        orphans_cmd="xbps-query -O"
        ;;
esac

case "$ACTION" in
    help)
        print_help
        ;;
    install)
        $prefix_cmd $install_cmd "$@"
        ;;
    remove)
        $prefix_cmd $remove_cmd "$@"
        ;;
    search)
        $prefix_cmd $search_cmd "$@"
        ;;
    update)
        $prefix_cmd $update_cmd "$@"
        ;;
    upgrade)
        $prefix_cmd $upgrade_cmd "$@"
        ;;
    list)
        $prefix_cmd $list_cmd "$@"
        ;;
    info)
        $prefix_cmd $info_cmd "$@"
        ;;
    which)
        $prefix_cmd $which_cmd "$@"
        ;;
    files)
        $prefix_cmd $files_cmd "$@"
        ;;
    clean)
        $prefix_cmd $clean_cmd "$@"
        ;;
    hold)
        $prefix_cmd $hold_cmd "$@"
        ;;
    unhold)
        $prefix_cmd $unhold_cmd "$@"
        ;;
    deps|dependencies|depends-on)
        $prefix_cmd $deps_cmd "$@"
        ;;
    revdeps|reverse-dependencies|required-by)
        $prefix_cmd $revdeps_cmd "$@"
        ;;
    orphans)
        $prefix_cmd $orphans_cmd "$@"
        ;;
    *)
        echo "pkg: unknown action: ${ACTION}"
        exit 1
        ;;
esac
